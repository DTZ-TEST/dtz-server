<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap        
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"        
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="groupWarn">

	<resultMap class="com.sy599.game.db.bean.group.GroupWarn" id="tGroupWarn">
		<result property="id" column="id" />
		<result property="groupId" column="groupId" />
		<result property="userId" column="userId" />
		<result property="warnScore" column="warnScore" />
		<result property="warnSwitch" column="warnSwitch" />
		<result property="createTime" column="createTime" />
	</resultMap>


    <select id="getGroupWarnByUserIdAndGroupId" parameterClass = "java.util.Map"  resultMap="tGroupWarn">
		select * from t_group_warn
		where userId = #userId# and groupId = #groupId#
	</select>

	<select id="groupWarnList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT
            d2.userId,
            u.headimgurl,
            u.name,
            d2.sumCredit,
            d2.warnScore,
            d2.warnSwitch,
            if(d2.warnScore >d2.sumCredit,'1','0') as status
        FROM
            (
			SELECT
                    d1.*,
                    tw.warnScore,
                    tw.warnSwitch,
                    tw.createTime as descTime,
                    ( CASE WHEN d1.promoterId = 0 THEN #promoterId# ELSE d1.promoterId END ) AS userId
                FROM
                    (
                        SELECT
                             $groupByKey$ AS promoterId,
                            count( userId ) AS memberCount,
                            sum( credit ) AS sumCredit
                        FROM
                            t_group_user
                        WHERE
                            groupId = #groupId#
                            $andSql$

                        GROUP BY
                             $groupByKey$
                    ) d1 , t_group_warn tw
                  WHERE  (CASE WHEN d1.promoterId = 0 THEN #promoterId# ELSE d1.promoterId END ) != #promoterId#
					 and (CASE WHEN d1.promoterId = 0 THEN #promoterId# ELSE d1.promoterId END ) = tw.userId
					 and tw.groupId = #groupId#
				<dynamic prepend="">
					<isPropertyAvailable prepend=" and " property="targetUserId">
						tw.userId = #targetUserId#
					</isPropertyAvailable>
				</dynamic>

            ) d2,
            user_inf u,
            t_group_user gu
        WHERE
            u.userId = d2.userId
            AND gu.groupId = #groupId#
            AND gu.userId = d2.userId
        order by (case when d2.promoterId = 0 then 0 else 1 end) asc ,d2.descTime desc
		LIMIT #startNo#,#pageSize#
	</select>


    <insert id="insertGroupWarn" parameterClass="com.sy599.game.db.bean.group.GroupWarn">
		insert into t_group_warn (groupId,userId,warnScore,warnSwitch,createTime) values (#groupId#, #userId#,#warnScore#, #warnSwitch#,#createTime#)
	</insert>

    <delete id="deleteGroupWarn"  parameterClass = "java.util.Map">
		delete from t_group_warn
		WHERE userId = #userId# and groupId = #groupId#;
	</delete>

    <update id="updateGroupWarn" parameterClass="java.util.HashMap">
        update t_group_warn
        set
            warnScore = #warnScore# ,
            warnSwitch = #warnSwitch#
        where
            groupId = #groupId#
            AND userId = #userId#
    </update>


    <select id="groupWarnListForMaster" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
        select *,if(d1.warnScore >d2.sumCredit,'1','0') as status from
        (
        select gw.userId,
        gw.userGroup,
        gw.creditCommissionRate,
        u.name,
        u.headimgurl,
        gw.warnScore,
        gw.warnSwitch
        from (
        SELECT
        gu.userId,
        gu.userGroup,
        gu.creditCommissionRate,
        w.warnScore,
        w.warnSwitch
        FROM t_group_user gu ,t_group_warn w
        where
        w.groupId = #groupId#
        and (gu.userRole = 0 or gu.userRole = 10)
        and gu.userGroup != 0
        and w.userId = gu.userId ) gw, user_inf u
        where u.userId = gw.userId
        <dynamic prepend="">
            <isPropertyAvailable prepend=" and " property="targetUserId">
                (u.userId = #targetUserId# OR u.name LIKE concat('%', #targetUserId#, '%'))
            </isPropertyAvailable>
        </dynamic>
        ) as d1 ,
        (
        SELECT
        teamName,
        userGroup AS userGroup,
        count( userId ) AS memberCount,
        sum( credit ) AS sumCredit
        FROM t_group_user gu left join t_group_relation r on r.keyId=gu.userGroup
        where
        gu.groupId = #groupId#
        and userGroup != 0
        group by userGroup
        ) as d2
        where
        d2.userGroup = d1.userGroup
        order by (case when d2.userGroup = '0' then 0 else 1 end) asc, d2.sumCredit desc
        LIMIT #startNo#,#pageSize#
    </select>

    <select id="groupWarnListForTeamLeader" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
        select *,if(d1.warnScore >d2.sumCredit,'1','0') as status from
        (
        select gg.userId,
        gg.promoterId as promoterId,
        gg.creditCommissionRate,
        gg.name,
        gg.headimgurl,
        gw.warnScore,
        gw.warnSwitch
        from (SELECT
        gu.userId,
        gu.promoterId1 as promoterId,
        gu.creditCommissionRate,
        u.name,
        u.headimgurl,
        gu.groupId
        FROM t_group_user gu , user_inf u
        where
        gu.groupId = #groupId#
        and userGroup =  #userGroup#
        and (gu.userRole != 10 or (gu.userRole = 20 and promoterLevel = 1))
        and u.userId=gu.userId
        <dynamic prepend="">
            <isPropertyAvailable prepend=" and " property="targetUserId">
                (u.userId = #targetUserId# OR u.name LIKE concat('%', #targetUserId#, '%'))
            </isPropertyAvailable>
        </dynamic>
        ) gg,t_group_warn gw where gg.userId = gw.userId and gg.groupId = gw.groupId

        ) as d1 ,
        (
        SELECT
        promoterId1 AS promoterId,
        count( userId ) AS memberCount,
        sum( credit ) AS sumCredit
        FROM t_group_user
        where
        groupId =#groupId#
        and userGroup = #userGroup#
        group by promoterId1
        ) as d2
        where
        d2.promoterId = d1.promoterId
        order by (case when d2.promoterId = 0 then 0 else 1 end) asc,d2.sumCredit desc
        LIMIT #startNo#,#pageSize#
    </select>

    <select id="groupWarnListForPromoter" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
        select * ,if(d1.warnScore >d2.sumCredit,'1','0') as status from
        (
        SELECT gg.userId,
        gg.promoterId as promoterId,
        gg.creditCommissionRate,
        gg.name,
        gg.headimgurl,
        gw.warnScore,
        gw.warnSwitch
        FROM (
        SELECT
        gu.userId,
        gu.$promoterIdKey2$ as promoterId,
        gu.creditCommissionRate,
        u.name,
        u.headimgurl,
        gu.groupId
        FROM t_group_user gu , user_inf u
        where
        gu.groupId = #groupId#
        and userGroup = #userGroup#
        and $promoterIdKey1$ = #userId#
        and (gu.userRole = 20 and (gu.promoterLevel = #level1# or promoterLevel = #level2#))
        and u.userId = gu.userId
        and u.userId != #userId#
        <dynamic prepend="">
            <isPropertyAvailable prepend=" and " property="targetUserId">
                (u.userId = #targetUserId# OR u.name LIKE concat('%', #targetUserId#, '%'))
            </isPropertyAvailable>
        </dynamic>
        )gg,t_group_warn gw where gg.userId = gw.userId and gg.groupId = gw.groupId
        ) as d1 ,
        (
        SELECT
        $promoterIdKey2$ AS promoterId,
        count( userId ) AS memberCount,
        sum( credit ) AS sumCredit
        FROM t_group_user
        where
        groupId = #groupId#
        and userGroup = #userGroup#
        and $promoterIdKey1$ = #userId#
        group by $promoterIdKey2$
        ) as d2
        where
        d2.promoterId=d1.promoterId
        order by (case when d2.promoterId = 0 then 0 else 1 end) asc ,d2.sumCredit desc
    </select>


</sqlMap>